// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: query.sql

package feedback

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const listFeedbacks = `-- name: ListFeedbacks :many
SELECT id, content, created_at, promotion
FROM feedback f
LEFT JOIN student s ON f.user_id = s.user_id
ORDER BY f.created_at DESC
`

type ListFeedbacksRow struct {
	ID        int32
	Content   string
	CreatedAt pgtype.Timestamptz
	Promotion pgtype.Text
}

func (q *Queries) ListFeedbacks(ctx context.Context) ([]ListFeedbacksRow, error) {
	rows, err := q.db.Query(ctx, listFeedbacks)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListFeedbacksRow
	for rows.Next() {
		var i ListFeedbacksRow
		if err := rows.Scan(
			&i.ID,
			&i.Content,
			&i.CreatedAt,
			&i.Promotion,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
